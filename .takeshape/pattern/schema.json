{
  "workflows": {},
  "apiVersion": "2",
  "defaultLocale": "en",
  "locales": [
    "en"
  ],
  "projectId": "73e1dce1-77f0-4c3d-86a0-7e3d0389838a",
  "schemaVersion": "3",
  "version": 1,
  "queries": {
    "getLook": {
      "shape": "Look",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "options": {
          "model": "Look"
        }
      },
      "description": "Get a Look by ID",
      "args": "TSGetArgs<Look>"
    },
    "getLookList": {
      "shape": "PaginatedList<Look>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "options": {
          "model": "Look"
        }
      },
      "description": "Returns a list Look in natural order.",
      "args": "TSListArgs<Look>"
    },
    "getProduct": {
      "shape": "Product",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "options": {
          "model": "Product"
        }
      },
      "description": "Get a Product by ID",
      "args": "TSGetArgs<Product>"
    },
    "getProductList": {
      "shape": "PaginatedList<Product>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "options": {
          "model": "Product"
        }
      },
      "description": "Returns a list Product in natural order.",
      "args": "TSListArgs<Product>"
    }
  },
  "mutations": {
    "updateLook": {
      "shape": "UpdateResult<Look>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "options": {
          "model": "Look"
        }
      },
      "description": "Update Look",
      "args": "UpdateArgs<Look>"
    },
    "createLook": {
      "shape": "CreateResult<Look>",
      "resolver": {
        "name": "takeshape:create",
        "service": "takeshape:local",
        "options": {
          "model": "Look"
        }
      },
      "description": "Create Look",
      "args": "CreateArgs<Look>"
    },
    "duplicateLook": {
      "shape": "DuplicateResult<Look>",
      "resolver": {
        "name": "takeshape:duplicate",
        "service": "takeshape:local",
        "options": {
          "model": "Look"
        }
      },
      "description": "Duplicate Look",
      "args": "DuplicateArgs<Look>"
    },
    "deleteLook": {
      "shape": "DeleteResult<Look>",
      "resolver": {
        "name": "takeshape:delete",
        "service": "takeshape:local",
        "options": {
          "model": "Look"
        }
      },
      "description": "Delete Look",
      "args": "DeleteArgs<Look>"
    },
    "updateProduct": {
      "shape": "UpdateResult<Product>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "options": {
          "model": "Product"
        }
      },
      "description": "Update Product",
      "args": "UpdateArgs<Product>"
    },
    "createProduct": {
      "shape": "CreateResult<Product>",
      "resolver": {
        "name": "takeshape:create",
        "service": "takeshape:local",
        "options": {
          "model": "Product"
        }
      },
      "description": "Create Product",
      "args": "CreateArgs<Product>"
    },
    "duplicateProduct": {
      "shape": "DuplicateResult<Product>",
      "resolver": {
        "name": "takeshape:duplicate",
        "service": "takeshape:local",
        "options": {
          "model": "Product"
        }
      },
      "description": "Duplicate Product",
      "args": "DuplicateArgs<Product>"
    },
    "deleteProduct": {
      "shape": "DeleteResult<Product>",
      "resolver": {
        "name": "takeshape:delete",
        "service": "takeshape:local",
        "options": {
          "model": "Product"
        }
      },
      "description": "Delete Product",
      "args": "DeleteArgs<Product>"
    }
  },
  "created": "2020-10-21T17:54:48.406Z",
  "updated": "2020-11-04T15:25:42.071Z",
  "shapes": {
    "Look": {
      "id": "r_xEk_e6_",
      "name": "Look",
      "title": "Look",
      "description": "Each look features a photograph, the products being shown off, and optional accompanying text.",
      "workflow": "default",
      "model": {
        "type": "multiple"
      },
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Name",
            "@mapping": "takeshape:local:Look.dV7bNEgzW"
          },
          "photo": {
            "description": "",
            "$ref": "#/shapes/TSRelationship/schema",
            "@relationship": {
              "shapeIds": [
                "ASSET"
              ]
            },
            "title": "Photo",
            "@mapping": "takeshape:local:Look.qksCzRvF0"
          },
          "text": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Text",
            "@mapping": "takeshape:local:Look.HUMBSdyzB"
          },
          "products": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/shapes/TSRelationship/schema"
            },
            "@relationship": {
              "shapeIds": [
                "S_yRgX0O9"
              ],
              "type": "multiple",
              "relatedName": "looks"
            },
            "title": "Products",
            "@mapping": "takeshape:local:Look.LhfZxLa9e"
          }
        },
        "required": [
          "name",
          "photo"
        ]
      }
    },
    "Shopify_Product": {
      "name": "Shopify_Product",
      "title": "Product",
      "id": "Shopify_product",
      "description": "Represents a product, including information about related collections and product variants.",
      "schema": {
        "type": "object",
        "properties": {
          "descriptionHtml": {
            "description": "The description of the product, complete with HTML formatting.",
            "@tag": "HTML",
            "@mapping": "shopify:takeshape-io-shop:Product.descriptionHtml",
            "type": "string",
            "title": "Description Html",
            "readOnly": true
          },
          "handle": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:Product.handle",
            "description": "A unique human-friendly string of the product's title.",
            "title": "Handle",
            "readOnly": true
          },
          "productType": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:Product.productType",
            "description": "The product type specified by the merchant.",
            "title": "Product Type",
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "@mapping": "shopify:takeshape-io-shop:Product.tags",
            "description": "A comma separated list of tags that have been added to the product.",
            "title": "Tags",
            "readOnly": true
          },
          "templateSuffix": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:Product.templateSuffix",
            "description": "The theme template used when viewing the product in a store.",
            "title": "Template Suffix",
            "readOnly": true
          },
          "giftCardTemplateSuffix": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:Product.giftCardTemplateSuffix",
            "description": "The theme template used when viewing the gift card in a store.",
            "title": "Gift Card Template Suffix",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:Product.title",
            "description": "The title of the product.",
            "title": "Title",
            "readOnly": true
          },
          "vendor": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:Product.vendor",
            "description": "The name of the product's vendor.",
            "title": "Vendor",
            "readOnly": true
          },
          "bodyHtml": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:Product.bodyHtml",
            "@deprecationReason": "Use `descriptionHtml` instead",
            "description": "The description of the product, complete with HTML formatting.",
            "title": "Body Html",
            "readOnly": true
          },
          "publishedAt": {
            "description": "The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601))\nwhen the product was published to the Online Store.",
            "@tag": "DateTime",
            "@mapping": "shopify:takeshape-io-shop:Product.publishedAt",
            "format": "date-time",
            "type": "string",
            "title": "Published At",
            "readOnly": true
          },
          "variants": {
            "$ref": "#/shapes/Shopify_ProductVariantConnection/schema",
            "@args": {
              "type": "object",
              "properties": {
                "first": {
                  "type": "integer",
                  "description": "Returns up to the first `n` elements from the list."
                },
                "after": {
                  "type": "string",
                  "description": "Returns the elements that come after the specified cursor."
                },
                "last": {
                  "type": "integer",
                  "description": "Returns up to the last `n` elements from the list."
                },
                "before": {
                  "type": "string",
                  "description": "Returns the elements that come before the specified cursor."
                },
                "reverse": {
                  "type": "boolean",
                  "description": "Reverse the order of the underlying list."
                },
                "sortKey": {
                  "description": "Sort the underlying list by the given key.",
                  "enum": [
                    "TITLE",
                    "NAME",
                    "SKU",
                    "INVENTORY_QUANTITY",
                    "INVENTORY_MANAGEMENT",
                    "INVENTORY_LEVELS_AVAILABLE",
                    "INVENTORY_POLICY",
                    "FULL_TITLE",
                    "POPULAR",
                    "POSITION",
                    "ID",
                    "RELEVANCE"
                  ]
                }
              }
            },
            "description": "A list of variants associated with the product.",
            "title": "Variants",
            "readOnly": true
          }
        },
        "required": [
          "title"
        ]
      }
    },
    "Shopify_ProductVariant": {
      "name": "Shopify_ProductVariant",
      "title": "ProductVariant",
      "id": "Shopify_productVariant",
      "description": "Represents a product variant.",
      "schema": {
        "type": "object",
        "properties": {
          "barcode": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:ProductVariant.barcode",
            "description": "The value of the barcode associated with the product.",
            "title": "Barcode",
            "readOnly": true
          },
          "compareAtPrice": {
            "description": "The compare-at price of the variant in the default shop currency.",
            "@tag": "Money",
            "@mapping": "shopify:takeshape-io-shop:ProductVariant.compareAtPrice",
            "type": "string",
            "title": "Compare At Price",
            "readOnly": true
          },
          "harmonizedSystemCode": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:ProductVariant.harmonizedSystemCode",
            "@deprecationReason": "Use `InventoryItem.harmonizedSystemCode` instead.",
            "description": "The Harmonized System Code (or HS Tariff Code) for the variant.",
            "title": "Harmonized System Code",
            "readOnly": true
          },
          "inventoryManagement": {
            "description": "The fulfillment service that tracks the number of items in stock for the product variant.",
            "enum": [
              "SHOPIFY",
              "NOT_MANAGED",
              "FULFILLMENT_SERVICE"
            ],
            "@mapping": "shopify:takeshape-io-shop:ProductVariant.inventoryManagement",
            "@deprecationReason": "Use tracked attribute on `inventoryItem` instead.",
            "type": "string",
            "title": "Inventory Management",
            "readOnly": true
          },
          "position": {
            "type": "integer",
            "@mapping": "shopify:takeshape-io-shop:ProductVariant.position",
            "description": "The order of the product variant in the list of product variants. The first position in the list is 1.",
            "title": "Position",
            "readOnly": true
          },
          "price": {
            "description": "The price of the product variant in the default shop currency.",
            "@tag": "Money",
            "@mapping": "shopify:takeshape-io-shop:ProductVariant.price",
            "type": "string",
            "title": "Price",
            "readOnly": true
          },
          "requiresShipping": {
            "type": "boolean",
            "@mapping": "shopify:takeshape-io-shop:ProductVariant.requiresShipping",
            "@deprecationReason": "Use `InventoryItem.requiresShipping` instead.",
            "description": "Whether a customer needs to provide a shipping address when placing an order for the product variant.",
            "title": "Requires Shipping",
            "readOnly": true
          },
          "sku": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:ProductVariant.sku",
            "description": "An identifier for the product variant in the shop. Required in order to connect to a fulfillment service.",
            "title": "Sku",
            "readOnly": true
          },
          "taxable": {
            "type": "boolean",
            "@mapping": "shopify:takeshape-io-shop:ProductVariant.taxable",
            "description": "Whether a tax is charged when the product variant is sold.",
            "title": "Taxable",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:ProductVariant.title",
            "description": "The title of the product variant.",
            "title": "Title",
            "readOnly": true
          },
          "taxCode": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:ProductVariant.taxCode",
            "description": "The tax code for the product variant.",
            "title": "Tax Code",
            "readOnly": true
          },
          "weight": {
            "type": "number",
            "@mapping": "shopify:takeshape-io-shop:ProductVariant.weight",
            "description": "The weight of the product variant in the unit system specified with weight_unit.",
            "title": "Weight",
            "readOnly": true
          },
          "weightUnit": {
            "description": "The unit of measurement that applies to the product variant's weight. If you\ndon't specify a value for weight_unit, then the shop's default unit of\nmeasurement is applied. Valid values: `g`, `kg`, `oz`, `lb`.",
            "enum": [
              "KILOGRAMS",
              "GRAMS",
              "POUNDS",
              "OUNCES"
            ],
            "@mapping": "shopify:takeshape-io-shop:ProductVariant.weightUnit",
            "type": "string",
            "title": "Weight Unit",
            "readOnly": true
          }
        },
        "required": []
      }
    },
    "Shopify_Collection": {
      "name": "Shopify_Collection",
      "title": "Collection",
      "id": "Shopify_collection",
      "description": "Represents a collection of products.",
      "schema": {
        "type": "object",
        "properties": {
          "descriptionHtml": {
            "description": "The description of the collection, complete with HTML formatting.",
            "@tag": "HTML",
            "@mapping": "shopify:takeshape-io-shop:Collection.descriptionHtml",
            "type": "string",
            "title": "Description Html",
            "readOnly": true
          },
          "handle": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:Collection.handle",
            "description": "A unique human-friendly string for the collection. Automatically generated from the collection's title.",
            "title": "Handle",
            "readOnly": true
          },
          "products": {
            "$ref": "#/shapes/Shopify_ProductConnection/schema",
            "@args": {
              "type": "object",
              "properties": {
                "first": {
                  "type": "integer",
                  "description": "Returns up to the first `n` elements from the list."
                },
                "after": {
                  "type": "string",
                  "description": "Returns the elements that come after the specified cursor."
                },
                "last": {
                  "type": "integer",
                  "description": "Returns up to the last `n` elements from the list."
                },
                "before": {
                  "type": "string",
                  "description": "Returns the elements that come before the specified cursor."
                },
                "reverse": {
                  "type": "boolean",
                  "description": "Reverse the order of the underlying list."
                },
                "sortKey": {
                  "description": "Sort the underlying list by the given key.",
                  "enum": [
                    "TITLE",
                    "PRICE",
                    "BEST_SELLING",
                    "CREATED",
                    "ID",
                    "MANUAL",
                    "COLLECTION_DEFAULT",
                    "RELEVANCE"
                  ]
                },
                "query": {
                  "type": "string",
                  "description": "This field is only used when the collection is smart. If the collection is custom it returns an error.\nSupported filter parameters:\n - `title`\n - `product_type`\n - `vendor`\n - `gift_card`\n - `created_at`\n - `updated_at`\n\nSee the detailed [search syntax](https://help.shopify.com/api/getting-started/search-syntax)."
                }
              }
            },
            "description": "The products that are included in the collection.",
            "title": "Products",
            "readOnly": true
          },
          "templateSuffix": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:Collection.templateSuffix",
            "description": "The theme template used when viewing this collection in a store.",
            "title": "Template Suffix",
            "readOnly": true
          },
          "sortOrder": {
            "description": "The order in which the collection's products are sorted.",
            "enum": [
              "ALPHA_ASC",
              "ALPHA_DESC",
              "BEST_SELLING",
              "CREATED",
              "CREATED_DESC",
              "MANUAL",
              "PRICE_ASC",
              "PRICE_DESC"
            ],
            "@mapping": "shopify:takeshape-io-shop:Collection.sortOrder",
            "type": "string",
            "title": "Sort Order",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:Collection.title",
            "description": "The title of the collection.",
            "title": "Title",
            "readOnly": true
          },
          "seo": {
            "$ref": "#/shapes/Shopify_SEO/schema",
            "description": "SEO information for the collection.",
            "title": "Seo",
            "readOnly": true
          }
        },
        "required": []
      }
    },
    "Shopify_SEO": {
      "name": "SEO",
      "title": "SEO",
      "id": "seo",
      "description": "SEO information.",
      "schema": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:SEO.description",
            "description": "SEO Description."
          },
          "title": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:SEO.title",
            "description": "SEO Title."
          }
        }
      }
    },
    "Shopify_ProductConnection": {
      "name": "ProductConnection",
      "title": "ProductConnection",
      "id": "productConnection",
      "schema": {
        "type": "object",
        "properties": {
          "edges": {
            "type": "array",
            "items": {
              "$ref": "#/shapes/Shopify_ProductEdge/schema"
            },
            "@mapping": "shopify:takeshape-io-shop:ProductConnection.edges",
            "description": "A list of edges."
          },
          "pageInfo": {
            "$ref": "#/shapes/Shopify_PageInfo/schema",
            "description": "Information to aid in pagination."
          }
        },
        "required": [
          "edges",
          "pageInfo"
        ]
      }
    },
    "Shopify_ProductEdge": {
      "name": "ProductEdge",
      "title": "ProductEdge",
      "id": "productEdge",
      "schema": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:ProductEdge.cursor",
            "description": "A cursor for use in pagination."
          },
          "node": {
            "$ref": "#/shapes/Shopify_Product/schema",
            "description": "The item at the end of ProductEdge."
          }
        },
        "required": [
          "cursor",
          "node"
        ]
      }
    },
    "Shopify_ProductVariantConnection": {
      "name": "ProductVariantConnection",
      "title": "ProductVariantConnection",
      "id": "productVariantConnection",
      "schema": {
        "type": "object",
        "properties": {
          "edges": {
            "type": "array",
            "items": {
              "$ref": "#/shapes/Shopify_ProductVariantEdge/schema"
            },
            "@mapping": "shopify:takeshape-io-shop:ProductVariantConnection.edges",
            "description": "A list of edges."
          },
          "pageInfo": {
            "$ref": "#/shapes/Shopify_PageInfo/schema",
            "description": "Information to aid in pagination."
          }
        },
        "required": [
          "edges",
          "pageInfo"
        ]
      }
    },
    "Shopify_ProductVariantEdge": {
      "name": "ProductVariantEdge",
      "title": "ProductVariantEdge",
      "id": "productVariantEdge",
      "schema": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:ProductVariantEdge.cursor",
            "description": "A cursor for use in pagination."
          },
          "node": {
            "$ref": "#/shapes/Shopify_ProductVariant/schema",
            "description": "The item at the end of ProductVariantEdge."
          }
        },
        "required": [
          "cursor",
          "node"
        ]
      }
    },
    "Shopify_PageInfo": {
      "name": "PageInfo",
      "title": "PageInfo",
      "id": "pageInfo",
      "description": "Information about pagination in a connection.",
      "schema": {
        "type": "object",
        "properties": {
          "hasNextPage": {
            "type": "boolean",
            "@mapping": "shopify:takeshape-io-shop:PageInfo.hasNextPage",
            "description": "Indicates if there are more pages to fetch."
          },
          "hasPreviousPage": {
            "type": "boolean",
            "@mapping": "shopify:takeshape-io-shop:PageInfo.hasPreviousPage",
            "description": "Indicates if there are any pages prior to the current page."
          }
        },
        "required": [
          "hasNextPage",
          "hasPreviousPage"
        ]
      }
    },
    "Shopify_CollectionConnection": {
      "name": "CollectionConnection",
      "title": "CollectionConnection",
      "id": "collectionConnection",
      "schema": {
        "type": "object",
        "properties": {
          "edges": {
            "type": "array",
            "items": {
              "$ref": "#/shapes/Shopify_CollectionEdge/schema"
            },
            "@mapping": "shopify:takeshape-io-shop:CollectionConnection.edges",
            "description": "A list of edges."
          },
          "pageInfo": {
            "$ref": "#/shapes/Shopify_PageInfo/schema",
            "description": "Information to aid in pagination."
          }
        },
        "required": [
          "edges",
          "pageInfo"
        ]
      }
    },
    "Shopify_CollectionEdge": {
      "name": "CollectionEdge",
      "title": "CollectionEdge",
      "id": "collectionEdge",
      "schema": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:CollectionEdge.cursor",
            "description": "A cursor for use in pagination."
          },
          "node": {
            "$ref": "#/shapes/Shopify_Collection/schema",
            "description": "The item at the end of CollectionEdge."
          }
        },
        "required": [
          "cursor",
          "node"
        ]
      }
    },
    "Shopify_ProductOption": {
      "name": "ProductOption",
      "title": "ProductOption",
      "id": "productOption",
      "description": "Custom product property names like \"Size\", \"Color\", and \"Material\".\nProducts are based on permutations of these options.\nA product may have a maximum of 3 options.\n255 characters limit each.",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "@tag": "id",
            "@mapping": "shopify:takeshape-io-shop:ProductOption.id",
            "description": "Globally unique identifier."
          },
          "name": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:ProductOption.name",
            "description": "The product option’s name."
          },
          "position": {
            "type": "integer",
            "@mapping": "shopify:takeshape-io-shop:ProductOption.position",
            "description": "The product option's position."
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/shapes/Shopify_PublishedTranslation/schema"
            },
            "@mapping": "shopify:takeshape-io-shop:ProductOption.translations",
            "@args": {
              "type": "object",
              "properties": {
                "locale": {
                  "type": "string",
                  "description": "Filters translations locale."
                }
              },
              "required": [
                "locale"
              ]
            },
            "description": "The translations associated with the resource."
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "@mapping": "shopify:takeshape-io-shop:ProductOption.values",
            "description": "The corresponding value to the product option name."
          }
        },
        "required": [
          "id",
          "name",
          "position",
          "translations",
          "values"
        ]
      }
    },
    "Shopify_PublishedTranslation": {
      "name": "PublishedTranslation",
      "title": "PublishedTranslation",
      "id": "publishedTranslation",
      "description": "Published translation of a field of a resource.",
      "schema": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:PublishedTranslation.key",
            "description": "Translation key."
          },
          "locale": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:PublishedTranslation.locale",
            "description": "Translation locale."
          },
          "value": {
            "type": "string",
            "@mapping": "shopify:takeshape-io-shop:PublishedTranslation.value",
            "description": "Translation value."
          }
        },
        "required": [
          "key",
          "locale"
        ]
      }
    },
    "Product": {
      "id": "S_yRgX0O9",
      "name": "Product",
      "title": "Product",
      "workflow": "default",
      "model": {
        "type": "multiple"
      },
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Name",
            "@mapping": "takeshape:local:Product.9x3lQpAeA"
          },
          "image": {
            "description": "",
            "$ref": "#/shapes/TSRelationship/schema",
            "@relationship": {
              "shapeIds": [
                "ASSET"
              ]
            },
            "title": "Image",
            "@mapping": "takeshape:local:Product.8R9LNBKQh"
          },
          "takeshapeIoShopId": {
            "type": "string",
            "@mapping": "takeshape:local:Product.6jxM2O3oi",
            "title": "takeshape-io-shop",
            "minLength": 1,
            "pattern": "^gid://shopify/Product/\\d+$"
          },
          "takeshapeIoShop": {
            "$ref": "#/shapes/Shopify_Product/schema",
            "@resolver": {
              "name": "graphql:query",
              "service": "shopify:takeshape-io-shop",
              "options": {
                "fieldName": "product"
              },
              "argsMapping": {
                "id": [
                  [
                    "jsonPath",
                    {
                      "path": "$.source.takeshapeIoShopId"
                    }
                  ]
                ]
              }
            }
          }
        },
        "required": [
          "name",
          "image",
          "takeshapeIoShopId"
        ]
      }
    }
  },
  "forms": {
    "Look": {
      "default": {
        "properties": {
          "name": {
            "widget": "singleLineText"
          },
          "photo": {
            "widget": "image"
          },
          "text": {
            "widget": "paragraphText"
          },
          "products": {
            "widget": "relationship"
          }
        },
        "order": [
          "name",
          "photo",
          "text",
          "products"
        ]
      }
    },
    "Product": {
      "default": {
        "properties": {
          "name": {
            "widget": "singleLineText"
          },
          "image": {
            "widget": "image"
          },
          "takeshapeIoShop": {
            "properties": {
              "descriptionHtml": {
                "widget": "serviceObjectPropertyReadonly",
                "provider": "shopify"
              },
              "handle": {
                "widget": "serviceObjectPropertyReadonly",
                "provider": "shopify"
              },
              "redirectNewHandle": {
                "widget": "serviceObjectPropertyReadonly",
                "provider": "shopify"
              },
              "productType": {
                "widget": "serviceObjectPropertyReadonly",
                "provider": "shopify"
              },
              "tags": {
                "widget": "serviceObjectPropertyReadonly",
                "provider": "shopify"
              },
              "templateSuffix": {
                "widget": "serviceObjectPropertyReadonly",
                "provider": "shopify"
              },
              "giftCard": {
                "widget": "serviceObjectPropertyReadonly",
                "provider": "shopify"
              },
              "giftCardTemplateSuffix": {
                "widget": "serviceObjectPropertyReadonly",
                "provider": "shopify"
              },
              "title": {
                "widget": "serviceObjectPropertyReadonly",
                "provider": "shopify"
              },
              "vendor": {
                "widget": "serviceObjectPropertyReadonly",
                "provider": "shopify"
              },
              "bodyHtml": {
                "widget": "serviceObjectPropertyReadonly",
                "provider": "shopify"
              },
              "publishDate": {
                "widget": "serviceObjectPropertyReadonly",
                "provider": "shopify"
              },
              "publishOn": {
                "widget": "serviceObjectPropertyReadonly",
                "provider": "shopify"
              },
              "published": {
                "widget": "serviceObjectPropertyReadonly",
                "provider": "shopify"
              },
              "publishedAt": {
                "widget": "serviceObjectPropertyReadonly",
                "provider": "shopify"
              },
              "variants": {
                "widget": "shopifyRelationshipSummary",
                "provider": "shopify"
              }
            },
            "widget": "shopify",
            "wrapper": "shopifyServiceWrapper",
            "order": [
              "title",
              "handle",
              "descriptionHtml",
              "bodyHtml",
              "tags",
              "vendor",
              "publishedAt",
              "variants",
              "collections",
              "redirectNewHandle",
              "productType",
              "templateSuffix",
              "giftCard",
              "giftCardTemplateSuffix",
              "publishDate",
              "publishOn",
              "published"
            ]
          },
          "takeshapeIoShopId": {
            "instructions": "Format: gid://shopify/Product/1111111111111",
            "label": "product ID",
            "widget": "serviceObjectIdReadonly",
            "provider": "shopify",
            "serviceObjectType": "product",
            "service": "takeshape-io-shop"
          }
        },
        "order": [
          "name",
          "image",
          "takeshapeIoShopId",
          "takeshapeIoShop"
        ]
      }
    }
  }
}
